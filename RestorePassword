const { chromium } = require('playwright');

(async () => {
  const browser = await chromium.launch({
    headless: false, slowMo: 50
  });
  const context = await browser.newContext();

  // Open new page
  const page = await context.newPage();

  // Go to https://dev.lk.tr-line.ru/restore-password
  await page.goto('https://dev.lk.tr-line.ru/restore-password');

  // Click input[name="forget_email"]
  await page.click('input[name="forget_email"]');

  // Нажимаем на поле "e-mail"
  await page.click('input[name="forget_email"]');

  // Вводим e-mail
  await page.fill('input[name="forget_email"]', 'tnepavel@gmail.com');

  // Нажимаем "Сбросить пароль"
  await page.click('button:has-text("Сбросить пароль")');

  // Идет возврат на страницу авторизации
  await page.goto('https://dev.lk.tr-line.ru/sign-in');

  /*
  Заметки: Далее стоит открыть  тестовую почту в отдельной странице,
  найти письмо с подтверждением и нажать на ссылку
  Найти второе письмо с новым паролем и спарсить пароль,
  затем нужно передать этот пароль в (массив?) и брать его оттуда
  и передавать в тест с авторизацией в поле "пароль"
  каждый раз, когда происходит новый тестовый прогон
  (Но это не точно)
  Слишком неуклюжий костыль, автотест должен быть простым и читаемым, 
  как тест кейс
  Еще одно решение задачи: Проверять отправку письма и использовать
  сгенерированный пароль, который отправляется во втором письме.
  P.S Не могу решить эту задачу без доступа к коду и ввиду нехватки опыта
  */
  //await context.close();
  //await browser.close();
})();
